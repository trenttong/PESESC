Ethan Papp and Jim Herriot Regression test.


To properly run our program:

1. Prepare a set of golden outputs from report.pl that you want to compare against (i.e. these outputs would be most useful to generate before you update the ESESC code)
	cd /home/run
	make gold(will make golden-brick outputs for SLOW and FAST configs only for sake of runtime)

This will make a SLOW configuration golden brick and a FAST configuration golden brick

2. Run 'regression.sh' after an ESESC code change to compare NEW report.pl outputs to the golden brick outputs
	cd /home/run
	make regression
	1) examine command line output for ALL OK or ERROR
	2) navigate to /home/run/output to view the exact numbers and why there was an error
	3) navigate to /home/run/output/output_csv to get .csv files to import to excel for easy viewing

The output will consist of SLOW.last:SLOW.gold, FAST.last:FAST.gold, SLOW.last:FAST.last. CAT them each and examine the matrix for OK and ERROR. If all OK, then the values are relatively close (according to the epsilon defined in /home/run/compare/cmptab-eq.sh).

The directory 'output_csv' has the same output files, but these are easily imported to excel for an organized method of viewing.

Currently, the output directory includes a full run, compared to a gold standard full run. I made the golden output, then did a git-pull. There was no update using git-pull. I then ran make regression and mostly everything passed, except for some reason, 'ocean' application had a difference of ~50 rawInst between the golden run and the regression run. I dont know why this would happen, other than I kicked off some ubuntu updates during the regressino run (the updates were not running during the golden run). It is odd that the rawInst only increased for 'ocean' and not the other 8 applications. This may be because 'ocean' benchmark runs and depends on different things than the other 8.

FILE ORGANIZATION

/home/run
This is the main directory

/home/run/config
This has all of the shared.conf files that we can use when running ESESC. Substitute MILD or MEDIUM for SLOW or FAST

/home/run/exe
This has our executables that we call to grab the results from report.pl and arrange them into a table.

/home/run/log
This is all of the ESESC stdout and stderr output that gets redirected to files.

/home/run/exe/maketable.sh
This script runs ESESC with the specified shared.conf file (sh maketable.sh <SLOW MILD MEDIUM or FAST> and makes a table of the output across 9 benchmarks and comparing 5 metrics. 


	Exetime, BrMis, DL1lat, IPC, uIPC 	<---5 metrics
crafty
swim 
mcf 
vpr 
gcc                     9x5 table
blackscholes 
facesim 
fft 
ocean



^ 9 benchmarks

### MAIN DIRECTORY TO VIEW OUTPUT
/home/run/output
This is the final directory to check your results in.

### MAIN TWO SCRIPTS TO RUN
/home/run/regression.sh
This is the file that grabs the individual tables created by maketable.sh and compares the values between the golden output and the latest run.

/home/run/makegold.sh
This script is used to create the new gold standard output to be compared against. example: before doing a 'git pull', sh makegold.sh and after the git pull sh regression.sh

/home/run/report
This is where the individual report.pl go after running ESESC with our script.

/home/run/tables
This is where the output of maketable.sh goes. Here you will find timestamped (YYMMDD-HHMM) 9x5 tables. The syntax is <shared.conf type>.YYMMDD-HHMM.csv

