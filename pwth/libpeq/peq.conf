
energy = "energySection"

[EnergySection]
# Common parameters through all the power equations
# Implicit CPUID, Temp, VoltScale
tech = 32
frequency = 1.6GHz

[equation_sample1]
# in the code should be:
# foo = equation_sample1.dynamic.buid(10,20); // 10 is C0, 20 is C1 (constants)
# foo.eval(33); // V0 is 33
# foo.eval(34); // V0 is 34
dynamic = "3+C0+2*C1+V0"
leakage = "4+C0*V0/V1"

[SRAM_1Port_large]
dynamic = "P1+3.23*AR"
leakage = "P1+3.23*P0+(32^temp)"

[SRAM_1Port_Small_Fast]
dynamic = "P1+5.23*P0"
leakage = "P1+7.23*P0+(32^temp)"

[ROB]
local[0] = "P(P0)_nCommited"
dynamic = "tech+3.23*l0"
leakage = "l0*(10*temp)"

[efficientcache]
dynamic = "..."
leakage = "..."

[bpred]
# C1,C2...Cn are constants that can not change at runtime to a model
# locals would be a reference to a variable or model that changes at runtime
AR = "P(P0)_ExeEngine_iBALU_BRANCH:n + P(P0)_ExeEngine_iBALU_JUMP:n"
dynamic = "SRAM_1Port_Small_Fast(cpucore[P0].robSize).dynamic"
leakage = "SRAM_1Port_Small_Fast(cpucore[P0].robSize).leakage"

[TLB]
AR = "P(P0)_IL1:writeHit +P(P0)_IL1:writeMiss +P(P0)_IL1:readHit+P(P0)_IL1:readMiss"
dynamic = "CAM_Small(cpucore[P0].dtlbsize).dynamic"
leakage = "CAM_Small(cpucore[P0].dtlbsize).leakage"

[layoutDescr0]
blockMatch[0] = "bpred(0) + cache1"
blockMatch[1] = "ROB(0)"
blockMatch[2] = "bpred(1)"


# The previous configuration will render useless the stats fields, and the mcpat library


